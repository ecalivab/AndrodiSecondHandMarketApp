package com.example.lab02_exploits

import android.util.Log
import com.google.firebase.firestore.GeoPoint

//Status: if 0 is not buy, 1 block, Uid the user who buys it

class Items(var uId : String? = "", var id: String? = "", var title:String? = "", var description:String? = "",
            var price: Double? = 0.0, var category:String? = "", var location: String? = "",
            var expireDate: String? = "", var interestUsers: MutableList<String> = ArrayList() , var itemURI : String? = "" , var status : String? = "0",
            var geoPoint: GeoPoint? = null) {

    companion object ItemList {
        var itemList: MutableList<Items> = ArrayList()

        fun makeItem(uId: String, id: String, title: String, description: String, price: Double, category: String, location: String, expireDate: String, interestUsers: MutableList<String>, itemURI: String = "", status: String ="0"): Items {
            val item = Items(uId, id, title, description, price, category, location, expireDate,interestUsers, itemURI, status)
            itemList.add(item)
            return item
        }

        fun updateItem (uId: String, id: String,title: String, description: String, price: Double, category: String, location: String, expireDate: String, interestUsers: MutableList<String> , itemURI: String = "", status: String ="0") {
            val indexItem: Int = itemList.indexOfFirst{ it.id == id }
            val selectedItem = itemList[indexItem]
            selectedItem.title = title
            selectedItem.description = description
            selectedItem.price = price
            selectedItem.category = category
            selectedItem.location = location
            selectedItem.expireDate = expireDate
            selectedItem.itemURI = itemURI
        }

        fun printList (list : MutableList<Items>) { //For Debug Purposes not really functional
            list.forEach { Log.d("KKA","${it.id}, ${it.title}") }
        }

        fun itemExist (id: String) : Boolean {
            val indexItem: Int = itemList.indexOfFirst{ it.id == id }
            return indexItem != -1  //Return True if item exists
        }

        fun deleteItem0 (id: String) :Boolean{
            val indexItem: Int = itemList.indexOfFirst{ it.id == id }
            Log.d("KKA","delteItem Index: $indexItem")
            itemList.removeAt(indexItem)
            return true
        }
    }

}