package com.example.lab02_exploits

import android.content.Context
import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.*
import androidx.navigation.findNavController
import androidx.recyclerview.widget.RecyclerView
import com.bumptech.glide.Glide
import com.google.firebase.auth.FirebaseAuth
import java.util.ArrayList



class ItemAdapter (val itemsV: MutableList<Items>, val fragmentName : String): RecyclerView.Adapter<ItemAdapter.ViewHolder> () {

    private lateinit var auth: FirebaseAuth

    override fun getItemCount() = itemsV.size

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val v = LayoutInflater.from(parent.context).inflate(R.layout.item_list_recycler, parent,false)
        return ViewHolder(v)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {

        auth = FirebaseAuth.getInstance()
        holder.bind(itemsV[position])

        if(fragmentName == "BoughtList") {
            holder.btn.text = "Review"
        }

        if((auth.currentUser?.uid  != itemsV[position].uId) && fragmentName != "BoughtList") {
            holder.btn.visibility = View.GONE
        }

        if(!itemsV[position].itemURI.isNullOrEmpty()) {
            Glide.with(holder.photo.context)
                .load(itemsV[position].itemURI)
                .centerCrop()
                .circleCrop()
                .into(holder.photo)
        }

                //To set methods is onBindViewHolder
            holder.btn.setOnClickListener {
                val bundle = Bundle()
                bundle.putString("adapter_id", itemsV[position].id)
                bundle.putString("adapter_uid", itemsV[position].uId)
                bundle.putString("adapter_title", itemsV[position].title)
                bundle.putStringArrayList(
                    "adapter_userList",
                    itemsV[position].interestUsers as ArrayList<String>
                )
                bundle.putString("adapter_category", itemsV[position].category)
                when (fragmentName) {
                    "ItemList" -> it.findNavController().navigate(R.id.action_nav_itemList_to_editDetailsFragment, bundle)
                    "BoughtList" -> it.findNavController().navigate(R.id.action_nav_boughtItemList_to_reviewDialogFragment, bundle)
                    "InterestedItemList" -> it.findNavController().navigate(R.id.action_nav_interestedItemList_to_nav_itemDetails, bundle)
                    else -> {
                        it.findNavController()
                            .navigate(R.id.action_nav_buyitemList_to_nav_itemEdit, bundle)
                    }
                }
            }


        holder.itemView.setOnClickListener {
            val bundle = Bundle()
            bundle.putString("adapter_id", itemsV[position].id)
            bundle.putString("adapter_uid", itemsV[position].uId)
            bundle.putString("adapter_title", itemsV[position].title)
            bundle.putStringArrayList("adapter_userList", itemsV[position].interestUsers as ArrayList<String>)
            when (fragmentName) {
                "ItemList" -> it.findNavController().navigate(R.id.action_nav_itemList_to_itemDetailsFragment, bundle)
                "BoughtList" -> it.findNavController().navigate(R.id.action_nav_boughtItemList_to_nav_itemDetails, bundle)
                "InterestedItemList" -> it.findNavController().navigate(R.id.action_nav_interestedItemList_to_nav_itemDetails, bundle)
                else -> {
                    it.findNavController().navigate(R.id.action_nav_buyitemList_to_nav_itemDetails, bundle)
                }
            }
        }
    }

    class ViewHolder (v: View): RecyclerView.ViewHolder(v) {
        val title :TextView = v.findViewById(R.id.imageTitle)
        val price :TextView = v.findViewById(R.id.imagePrice)
        val category :TextView = v.findViewById(R.id.imageCategory)
        val photo :ImageView = v.findViewById(R.id.imageItem)

        val btn :Button = v.findViewById(R.id.editBtn)

        fun bind(i:Items) {
            title.text = i.title
            price.text = i.price.toString()
            category.text = i.category
        }
    }
}
