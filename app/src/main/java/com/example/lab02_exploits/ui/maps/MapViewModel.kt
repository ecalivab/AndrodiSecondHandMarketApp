package com.example.lab02_exploits.ui.maps

import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.example.lab02_exploits.ItemRepository
import com.example.lab02_exploits.UserRepository
import com.example.lab02_exploits.Users
import com.google.android.gms.maps.model.LatLng
import com.google.firebase.firestore.GeoPoint

class MapViewModel : ViewModel() {
    private val userRepo = UserRepository()
    private val itemRepo = ItemRepository()


    fun updateUserLocation (Uid: String, location: String, coordinates : GeoPoint) {
        userRepo.updateLocation(Uid, location, coordinates)
    }

    fun updateItemLocation (iId: String, location: String, coordinates : GeoPoint) {
        itemRepo.updateLocation(iId, location,coordinates)
    }

    fun fetchUserLocation(Uid: String) : MutableLiveData<GeoPoint> {
        val currentUserLocation = MutableLiveData<GeoPoint>()
        userRepo.getLocation(Uid).observeForever{ location ->
            currentUserLocation.value = location
        }
        return  currentUserLocation
    }

    fun fetchItemLocation(Iid: String) : MutableLiveData<GeoPoint> {
        val currentItemLocation = MutableLiveData<GeoPoint>()
        userRepo.getLocation(Iid).observeForever{ location ->
            currentItemLocation.value = location
        }
        return  currentItemLocation
    }

}
