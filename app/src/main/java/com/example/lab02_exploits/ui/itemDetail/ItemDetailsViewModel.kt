package com.example.lab02_exploits.ui.itemDetail

import android.util.Log
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.example.lab02_exploits.ItemRepository
import com.example.lab02_exploits.Items
import com.example.lab02_exploits.UserRepository
import com.google.android.gms.tasks.OnCompleteListener
import com.google.firebase.iid.FirebaseInstanceId
import com.google.firebase.messaging.FirebaseMessaging

class ItemDetailsViewModel : ViewModel() {

    private val itemRepo = ItemRepository()
    private val userRepo = UserRepository()

    fun fetchItem (itemId: String) : MutableLiveData<Items> {
        val currentItem = MutableLiveData<Items>()
        itemRepo.getItem(itemId).observeForever{ item ->
            currentItem.value = item
        }

        return  currentItem
    }

    fun getUserName (uid: String): MutableLiveData<String> {
        val name = MutableLiveData<String>()
        userRepo.getUserName(uid).observeForever{
            name.value = it
        }
        return name
    }

    fun addInterestUsers(iId: String, userList: MutableList<String>) {
        itemRepo.addInterestedUsers(iId, userList)
    }

    fun buyItem(uid: String, iId: String) {
        Log.d("EditItem", "ItemViewModelEntered")
        itemRepo.buyItem(uid, iId)
    }


    fun getItem( iId: String): MutableLiveData<Items> {
        val itm = MutableLiveData<Items>()
        Log.d("EditItem", "ItemViewModelEntered")
        itemRepo.getItem(iId).observeForever { it ->
            itm.value = it
        }
        return itm
    }
}
